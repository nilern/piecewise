Cons = recordType :head :tail;
Nil = recordType ();

foldLeft = {
  f acc (Cons val vals) -> foldLeft f (f acc val) vals;
  _ acc (Nil ()) -> acc
};

foldRight = {
  f acc (Cons val vals) -> f val (foldRight f acc vals);
  _ acc (Nil ()) -> acc
};

map = { f coll -> foldRight { val acc -> Cons (f val) acc } (Nil ()) coll };

(Cons, Nil, foldLeft, foldRight, map)
